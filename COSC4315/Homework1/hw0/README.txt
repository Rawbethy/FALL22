This program will take 3 input arguments in the command line, the first will be the command to execute the executable file (./filename), the second will be the name of the input text file and the third will be the name
of the output text file which will be up to the user. This program will execute by opening the input textfile and iterating through all the lines as getline() will be executed. In each getline() function, I will be
implementing a for loop that will go through each character in the line string and wait for a delimiter, or special character, to appear. When that happens, the program will check if the character previous to the current
delimiter was a delimiter itself and if it is, if will ignore this as whitespace. If the previous character of the current delimiter was a valid character of a word, I will chop the string using the substr() function
using a variable called prev. The prev variable will always be indexed at the beginning of a valid character sequence. The substring will then be converted to a char array to use tolower() function from #include <algorithm> 
to change the current character to a lowercase character in the char array. There will be a vector of pairs that will keep track of all the words and frequencies that is explained in the source code itself. When the algorithm 
completes execution, there will be a for loop that will go through the vector and index which element has the largest frequencies of all elements in the vector. There is an output file stream variable that takes the output 
argument as it's title and will print the word and the frequencies next to it as an output file in the same directory. I could not get to producing a solution to where there are two or more tied variables in frequency unfortunately.