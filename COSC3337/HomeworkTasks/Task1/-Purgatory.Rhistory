Recommendation[x] = "Divorce"
}
}
maritalData <- cbind(maritalData, Recommendation)
# Subtask 1: Find covariance of the given variables; Age gap, Economic Similarity, Common Interests and Divorce Probability
covData <-  subset(maritalData, select=c("Age.Gap", "Economic.Similarity", "Common.Interests", "Divorce.Probability"))
X11()
show(cov(covData))
# Here we are given the covariance matrix of all 4 attributes of the dataset. When the covariance is positive
# that means that the two attributes are directly related to each other meaning when one value goes up, the other value
# will do the same. The opposite is assumed for a negative covariance. Looking at this matrix, we can infer that
# the only variable that are directly related will be (Divorce Probability - Age Gap) and (Common Interests - Economic Stability).
# All other compared variables will not be directly related.
# Subtask 2: Create a scatter plot for the attributes Common Interests and Love. Interpret the scatter plot
scatterData <- subset(maritalData, select=c("Common.Interests", "Love"))
X11()
plot(scatterData$Common.Interests, scatterData$Love, pch=19, main="Common Interests vs. Love", xlab="Common Interests", ylab="Love")
# This plot Common Interests vs. Love is shown to be very indirectly related. There is no structure to the points being plotted therefore there is no
# relationship between common interest and love between two people
# Subtask 3: Create histograms for Divorce, Desire to Marry, and Common Interests attributes for both the Marry and the Divorce recommendations
subMarry <- which(maritalData$Recommendation == "Marry")
subDivorce <- which(maritalData$Recommendation == "Divorce")
X11()
par(mfrow=c(2,3))
hist(maritalData$Divorce.Probability[subMarry], xlab = "Divorce Probability", main = "Marry Recommendation", ylim = c(0,11))
hist(maritalData$Desire.to.Marry[subMarry], xlab = "Desire To Marry", main = "Marry Recommendation", ylim = c(0,11))
hist(maritalData$Common.Interests[subMarry], xlab = "Common Interests", main = "Marry Recommendation", ylim = c(0,11))
hist(maritalData$Divorce.Probability[subDivorce], xlab = "Divorce Probability", main = "Divorce Recommendation", ylim = c(0,11))
hist(maritalData$Desire.to.Marry[subDivorce], xlab = "Desire To Marry", main = "Divorce Recommendation", ylim = c(0,11))
hist(maritalData$Common.Interests[subDivorce], xlab = "Common Interests", main = "Divorce Recommendation", ylim = c(0,11))
covData <-  subset(maritalData, select=c("Age.Gap", "Economic.Similarity", "Common.Interests", "Divorce.Probability"))
show(cov(covData))
subMarry <- which(maritalData$Recommendation == "Marry")
subDivorce <- which(maritalData$Recommendation == "Divorce")
X11()
par(mfrow=c(2,3))
hist(maritalData$Divorce.Probability[subMarry], xlab = "Divorce Probability", main = "Marry Recommendation", ylim = c(0,11))
hist(maritalData$Desire.to.Marry[subMarry], xlab = "Desire To Marry", main = "Marry Recommendation", ylim = c(0,11))
hist(maritalData$Common.Interests[subMarry], xlab = "Common Interests", main = "Marry Recommendation", ylim = c(0,11))
hist(maritalData$Divorce.Probability[subDivorce], xlab = "Divorce Probability", main = "Divorce Recommendation", ylim = c(0,11))
hist(maritalData$Desire.to.Marry[subDivorce], xlab = "Desire To Marry", main = "Divorce Recommendation", ylim = c(0,11))
hist(maritalData$Common.Interests[subDivorce], xlab = "Common Interests", main = "Divorce Recommendation", ylim = c(0,11))
boxplot(maritalData$Self.Confidence~maritalData$Age.Gap, data = maritalData, main = "Boxplot for Marry Recommendation", xlab = "Age Gap", ylab = "Self Confidence")
X11()
par(mfrow=c(2,2))
boxplot(maritalData$Self.Confidence~maritalData$Age.Gap, data = maritalData, main = "Boxplot for Marry Recommendation", xlab = "Age Gap", ylab = "Self Confidence")
View(covData)
View(maritalData)
View(maritalData)
boxplot(maritalData$Self.Confidence[subMarry]~maritalData$Recommendation[subMarry], data = maritalData, main = "Boxplot for Marry Recommendation", xlab = "Recommendation", ylab = "Self Confidence")
X11()
par(mfrow=c(2,2))
boxplot(maritalData$Self.Confidence[subMarry]~maritalData$Recommendation[subMarry], data = maritalData, main = "Boxplot for Marry Recommendation", xlab = "Recommendation", ylab = "Self Confidence")
X11()
par(mfrow=c(2,2))
boxplot(maritalData$Self.Confidence[subMarry]~maritalData$Recommendation[subMarry], data = maritalData, main = "Boxplot for Marry Recommendation", xlab = "Marry", ylab = "Self Confidence")
X11()
par(mfrow=c(2,2))
boxplot(maritalData$Self.Confidence[subMarry]~maritalData$Recommendation[subMarry], data = maritalData, main = "Boxplot for Marry Recommendation", xlab = "Marry", ylab = "Self Confidence")
boxplot(maritalData$Self.Confidence[subDivorce]~maritalData$Recommendation[subDivorce], data = maritalData, main = "Boxplot for Divorce Recommendation", xlab = "Divorce", ylab = "Self Confidence")
X11()
figure <- multi_panel_figure(columns = 3, rows = 2, panel_label_type = "none")
maritalData <-  read.csv("C:\\Users\\rober\\OneDrive\\Desktop\\FALL22\\COSC3337\\HomeworkTasks\\Task1\\Marriage_Divorce_DB.csv", header=TRUE, stringsAsFactors=FALSE)
#Create new column "Recommendation" for Decision to Divorce or Marry
Recommendation <- rep(NA, 100)
for(x in 1:100) {
if(maritalData$Divorce.Probability[x] >= 1 & maritalData$Divorce.Probability[x] < 2) {
Recommendation[x] = "Marry"
}
else {
Recommendation[x] = "Divorce"
}
}
maritalData <- cbind(maritalData, Recommendation)
# Subtask 1: Find covariance of the given variables; Age gap, Economic Similarity, Common Interests and Divorce Probability
covData <-  subset(maritalData, select=c("Age.Gap", "Economic.Similarity", "Common.Interests", "Divorce.Probability"))
show(cov(covData))
# Here we are given the covariance matrix of all 4 attributes of the dataset. When the covariance is positive
# that means that the two attributes are directly related to each other meaning when one value goes up, the other value
# will do the same. The opposite is assumed for a negative covariance. Looking at this matrix, we can infer that
# the only variable that are directly related will be (Divorce Probability - Age Gap) and (Common Interests - Economic Stability).
# All other compared variables will not be directly related.
# Subtask 2: Create a scatter plot for the attributes Common Interests and Love. Interpret the scatter plot
scatterData <- subset(maritalData, select=c("Common.Interests", "Love"))
X11()
ggplot(scatterData, aes(x = Common.Interests, y = Love)) +
geom_point()
library(ggplot2)
maritalData <-  read.csv("C:\\Users\\rober\\OneDrive\\Desktop\\FALL22\\COSC3337\\HomeworkTasks\\Task1\\Marriage_Divorce_DB.csv", header=TRUE, stringsAsFactors=FALSE)
#Create new column "Recommendation" for Decision to Divorce or Marry
Recommendation <- rep(NA, 100)
for(x in 1:100) {
if(maritalData$Divorce.Probability[x] >= 1 & maritalData$Divorce.Probability[x] < 2) {
Recommendation[x] = "Marry"
}
else {
Recommendation[x] = "Divorce"
}
}
maritalData <- cbind(maritalData, Recommendation)
# Subtask 1: Find covariance of the given variables; Age gap, Economic Similarity, Common Interests and Divorce Probability
covData <-  subset(maritalData, select=c("Age.Gap", "Economic.Similarity", "Common.Interests", "Divorce.Probability"))
show(cov(covData))
# Here we are given the covariance matrix of all 4 attributes of the dataset. When the covariance is positive
# that means that the two attributes are directly related to each other meaning when one value goes up, the other value
# will do the same. The opposite is assumed for a negative covariance. Looking at this matrix, we can infer that
# the only variable that are directly related will be (Divorce Probability - Age Gap) and (Common Interests - Economic Stability).
# All other compared variables will not be directly related.
# Subtask 2: Create a scatter plot for the attributes Common Interests and Love. Interpret the scatter plot
scatterData <- subset(maritalData, select=c("Common.Interests", "Love"))
X11()
ggplot(scatterData, aes(x = Common.Interests, y = Love)) +
geom_point()
# This plot Common Interests vs. Love is shown to be very indirectly related. There is no structure to the points being plotted therefore there is no
# relationship between common interest and love between two people
# Subtask 3: Create histograms for Divorce, Desire to Marry, and Common Interests attributes for both the Marry and the Divorce recommendations
subMarry <- which(maritalData$Recommendation == "Marry")
subDivorce <- which(maritalData$Recommendation == "Divorce")
p1 <- ggplot(maritalData[subMarry,], aes(x=Divorce.Probability)) + geom_histogram(bins=15, fill="red", col=I("yellow")) + xlab("Divorce Probability") + ylab("Frequency")
p2 <- ggplot(maritalData[subMarry,], aes(x=Desire.to.Marry)) + geom_histogram(bins=15, fill="blue", col=I("red")) + xlab("Desire To Marry") + ylab("Frequency")
p3 <- ggplot(maritalData[subMarry,], aes(x=Common.Interests)) + geom_histogram(bins=15, fill="green", col=I("red")) + xlab("Common Interests") + ylab("Frequency")
p4 <- ggplot(maritalData[subDivorce,], aes(x=Divorce.Probability)) + geom_histogram(bins=15, fill="red", col=I("yellow")) + xlab("Divorce Probability") + ylab("Frequency")
p5 <- ggplot(maritalData[subDivorce,], aes(x=Desire.to.Marry)) + geom_histogram(bins=15, fill="blue", col=I("red")) + xlab("Desire To Marry") + ylab("Frequency")
p6 <- ggplot(maritalData[subDivorce,], aes(x=Common.Interests)) + geom_histogram(bins=15, fill="green", col=I("red")) + xlab("Common Interests") + ylab("Frequency")
X11()
figure <- multi_panel_figure(columns = 3, rows = 2, panel_label_type = "none")
library(ggplot2)
library(multipanelfigure)
maritalData <-  read.csv("C:\\Users\\rober\\OneDrive\\Desktop\\FALL22\\COSC3337\\HomeworkTasks\\Task1\\Marriage_Divorce_DB.csv", header=TRUE, stringsAsFactors=FALSE)
#Create new column "Recommendation" for Decision to Divorce or Marry
Recommendation <- rep(NA, 100)
for(x in 1:100) {
if(maritalData$Divorce.Probability[x] >= 1 & maritalData$Divorce.Probability[x] < 2) {
Recommendation[x] = "Marry"
}
else {
Recommendation[x] = "Divorce"
}
}
maritalData <- cbind(maritalData, Recommendation)
# Subtask 1: Find covariance of the given variables; Age gap, Economic Similarity, Common Interests and Divorce Probability
covData <-  subset(maritalData, select=c("Age.Gap", "Economic.Similarity", "Common.Interests", "Divorce.Probability"))
show(cov(covData))
# Here we are given the covariance matrix of all 4 attributes of the dataset. When the covariance is positive
# that means that the two attributes are directly related to each other meaning when one value goes up, the other value
# will do the same. The opposite is assumed for a negative covariance. Looking at this matrix, we can infer that
# the only variable that are directly related will be (Divorce Probability - Age Gap) and (Common Interests - Economic Stability).
# All other compared variables will not be directly related.
# Subtask 2: Create a scatter plot for the attributes Common Interests and Love. Interpret the scatter plot
scatterData <- subset(maritalData, select=c("Common.Interests", "Love"))
X11()
ggplot(scatterData, aes(x = Common.Interests, y = Love)) +
geom_point()
# This plot Common Interests vs. Love is shown to be very indirectly related. There is no structure to the points being plotted therefore there is no
# relationship between common interest and love between two people
# Subtask 3: Create histograms for Divorce, Desire to Marry, and Common Interests attributes for both the Marry and the Divorce recommendations
subMarry <- which(maritalData$Recommendation == "Marry")
subDivorce <- which(maritalData$Recommendation == "Divorce")
p1 <- ggplot(maritalData[subMarry,], aes(x=Divorce.Probability)) + geom_histogram(bins=15, fill="red", col=I("yellow")) + xlab("Divorce Probability") + ylab("Frequency")
p2 <- ggplot(maritalData[subMarry,], aes(x=Desire.to.Marry)) + geom_histogram(bins=15, fill="blue", col=I("red")) + xlab("Desire To Marry") + ylab("Frequency")
p3 <- ggplot(maritalData[subMarry,], aes(x=Common.Interests)) + geom_histogram(bins=15, fill="green", col=I("red")) + xlab("Common Interests") + ylab("Frequency")
p4 <- ggplot(maritalData[subDivorce,], aes(x=Divorce.Probability)) + geom_histogram(bins=15, fill="red", col=I("yellow")) + xlab("Divorce Probability") + ylab("Frequency")
p5 <- ggplot(maritalData[subDivorce,], aes(x=Desire.to.Marry)) + geom_histogram(bins=15, fill="blue", col=I("red")) + xlab("Desire To Marry") + ylab("Frequency")
p6 <- ggplot(maritalData[subDivorce,], aes(x=Common.Interests)) + geom_histogram(bins=15, fill="green", col=I("red")) + xlab("Common Interests") + ylab("Frequency")
X11()
figure <- multi_panel_figure(columns = 3, rows = 2, panel_label_type = "none")
figure %<>%
fill_panel(p1, column = 1, row = 1) %<>%
fill_panel(p2, column = 2, row = 1) %<>%
fill_panel(p3, column = 3, row = 1) %<>%
fill_panel(p4, column = 1, row = 2) %<>%
fill_panel(p5, column = 2, row = 2) %<>%
fill_panel(p6, column = 3, row = 2)
figure
b1 <- ggplot(maritalData[subMarr,], aes(x=Recommendation, y=Self.Confidence)) + geom_boxplot()
X11()
b1 <- ggplot(maritalData[subMarry,], aes(x=Recommendation, y=Self.Confidence)) + geom_boxplot()
X11()
ggplot(maritalData[subMarry,], aes(x=Recommendation, y=Self.Confidence)) + geom_boxplot()
X11()
ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence)) + geom_boxplot()
par(mfrow=c(2,2))
X11()
ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence), col = Recommendation) + geom_boxplot()
X11()
ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence), colour = Recommendation) + geom_boxplot()
X11()
ggplot(maritalData, aes(x=Recommendation, y=Self)) + geom_boxplot(col=Recommendation)
X11()
ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence)) + geom_boxplot(col=Recommendation)
X11()
ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence)) + geom_boxplot(col=Recommendation)
ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence)) + geom_boxplot(colours=Recommendation)
ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence)) + geom_boxplot(colour=Recommendation)
boxplot(maritalData$Self.Confidence[subMarry]~maritalData$Recommendation[subMarry], data = maritalData, main = "Boxplot for Marry Recommendation", xlab = "Marry", ylab = "Self Confidence")
X11()
ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence)) + geom_boxplot(colour=Recommendation)
X11()
ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot()
X11()
ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence, fill="blue")) + geom_boxplot() + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=2, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1, row = 1) %<>%
fill_panel(b2, column = 2, row = 1)
figure
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence, fill="blue")) + geom_boxplot() + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=4, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:2, row = 1) %<>%
fill_panel(b2, column = 3:4, row = 1)
figure
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence, fill="blue")) + geom_boxplot() + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=4, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:2.5, row = 1) %<>%
fill_panel(b2, column = 3:4, row = 1)
figure
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence, fill="blue")) + geom_boxplot() + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=4, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:3, row = 1) %<>%
fill_panel(b2, column = 3:4, row = 1)
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence, fill="blue")) + geom_boxplot() + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=5, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:3, row = 1) %<>%
fill_panel(b2, column = 4:5, row = 1)
figure
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence, col="blue")) + geom_boxplot() + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=5, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:3, row = 1) %<>%
fill_panel(b2, column = 4:5, row = 1)
figure
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
library(ggplot2)
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence, col="blue")) + geom_boxplot() + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=5, rows=1, panel_label_type = "none")
library(multipanelfigure)
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence, col="blue")) + geom_boxplot() + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=5, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:3, row = 1) %<>%
fill_panel(b2, column = 4:5, row = 1)
figure
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence, fill="blue")) + geom_boxplot() + theme(legend.position="none") + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=5, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:3, row = 1) %<>%
fill_panel(b2, column = 4:5, row = 1)
figure
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence)) + geom_boxplot(fill="blue") + theme(legend.position="none") + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=5, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:3, row = 1) %<>%
fill_panel(b2, column = 4:5, row = 1)
figure
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence)) + geom_boxplot(fill="blue") + theme(legend.position="none") + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=5, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:3, row = 1) %<>%
fill_panel(b2, column = 4:5, row = 1)
figure
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence)) + geom_boxplot(fill="yellow") + theme(legend.position="none") + xlab("Marray & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=5, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:3, row = 1) %<>%
fill_panel(b2, column = 4:5, row = 1)
figure
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence)) + geom_boxplot(fill="yellow") + theme(legend.position="none") + xlab("Marry & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=5, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:3, row = 1) %<>%
fill_panel(b2, column = 4:5, row = 1)
figure
ls(maritalData)
X11()
ggplot(maritalData, aes(Economic.Similarity, Common.Interests, color=Recommendation)) + geom_point()
X11()
ggplot(maritalData, aes(Economic.Similarity, Common.Interests, color=Recommendation)) + geom_point() + geom_smooth(se=FALSE)
X11()
ggplot(maritalData, aes(Economic.Similarity, Common.Interests, color=Recommendation)) + geom_point()
X11()
ggplot(maritalData, aes(Common.Interests, Loyalty, color=Recommendation)) + geom_point()
X11()
ggplot(maritalData, aes(Loyalty, Economic.Similarity, color=Recommendation)) + geom_point()
X11()
ggplot(maritalData, aes(Economic.Similarity, Common.Interests, color=Recommendation)) + geom_point() + labs(x="Economic Similarity", y="Common Interests")
X11()
ggplot(maritalData, aes(Common.Interests, Loyalty, color=Recommendation)) + geom_point() + labs(x="Common Interests", y="Loyalty")
X11()
ggplot(maritalData, aes(Loyalty, Economic.Similarity, color=Recommendation)) + geom_point() + labs(x="Loyalty", y="Economic Similarity")
X11()
ggplot(maritalData, aes(Economic.Similarity, Common.Interests, color=Recommendation)) + geom_point() + labs(x="Economic Similarity", y="Common Interests")
X11()
ggplot(maritalData, aes(x=Age.Gap)) + geom_density(fill=Recommendation)
X11()
ggplot(maritalData, aes(x=Age.Gap)) + geom_density(color=Recommendation)
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation)) + geom_density()
X11()
ggplot(maritalData, aes(x=Age.Gap, fill=Recommendation)) + geom_density()
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation)) + geom_density(size=2)
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation)) + geom_density(size=1.5)
X11()
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation)) + geom_density(size=1.5)  + xlab("Social Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation)) + geom_density(size=1.5)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation)) + geom_density(size=1.5)  + xlab("Social Gap")
library(ggplot2)
install>packages("tidyverse")
install.packages(tidyverse)
install.packages("tidyverse")
library(ggplot2)
library(multipanelfigure)
install.packages("multipanelfigure")
library(ggplot2)
library(multipanelfigure)
#Create new column "Recommendation" for Decision to Divorce or Marry
Recommendation <- rep(NA, 100)
for(x in 1:100) {
if(maritalData$Divorce.Probability[x] >= 1 & maritalData$Divorce.Probability[x] < 2) {
Recommendation[x] = "Marry"
}
else {
Recommendation[x] = "Divorce"
}
}
maritalData <- cbind(maritalData, Recommendation)
# Subtask 1: Find covariance of the given variables; Age gap, Economic Similarity, Common Interests and Divorce Probability
covData <-  subset(maritalData, select=c("Age.Gap", "Economic.Similarity", "Common.Interests", "Divorce.Probability"))
show(cov(covData))
# Here we are given the covariance matrix of all 4 attributes of the dataset. When the covariance is positive
# that means that the two attributes are directly related to each other meaning when one value goes up, the other value
# will do the same. The opposite is assumed for a negative covariance. Looking at this matrix, we can infer that
# the only variable that are directly related will be (Divorce Probability - Age Gap) and (Common Interests - Economic Stability).
# All other compared variables will not be directly related.
# Subtask 2: Create a scatter plot for the attributes Common Interests and Love. Interpret the scatter plot
scatterData <- subset(maritalData, select=c("Common.Interests", "Love"))
X11()
ggplot(scatterData, aes(x = Common.Interests, y = Love)) +
geom_point()
# This plot Common Interests vs. Love is shown to be very indirectly related. There is no structure to the points being plotted therefore there is no
# relationship between common interest and love between two people
# Subtask 3: Create histograms for Divorce, Desire to Marry, and Common Interests attributes for both the Marry and the Divorce recommendations
subMarry <- which(maritalData$Recommendation == "Marry")
subDivorce <- which(maritalData$Recommendation == "Divorce")
p1 <- ggplot(maritalData[subMarry,], aes(x=Divorce.Probability)) + geom_histogram(bins=15, fill="red", col=I("yellow")) + xlab("Divorce Probability") + ylab("Frequency")
p2 <- ggplot(maritalData[subMarry,], aes(x=Desire.to.Marry)) + geom_histogram(bins=15, fill="blue", col=I("red")) + xlab("Desire To Marry") + ylab("Frequency")
p3 <- ggplot(maritalData[subMarry,], aes(x=Common.Interests)) + geom_histogram(bins=15, fill="green", col=I("red")) + xlab("Common Interests") + ylab("Frequency")
p4 <- ggplot(maritalData[subDivorce,], aes(x=Divorce.Probability)) + geom_histogram(bins=15, fill="red", col=I("yellow")) + xlab("Divorce Probability") + ylab("Frequency")
p5 <- ggplot(maritalData[subDivorce,], aes(x=Desire.to.Marry)) + geom_histogram(bins=15, fill="blue", col=I("red")) + xlab("Desire To Marry") + ylab("Frequency")
p6 <- ggplot(maritalData[subDivorce,], aes(x=Common.Interests)) + geom_histogram(bins=15, fill="green", col=I("red")) + xlab("Common Interests") + ylab("Frequency")
X11()
figure <- multi_panel_figure(columns = 3, rows = 2, panel_label_type = "none")
figure %<>%
fill_panel(p1, column = 1, row = 1) %<>%
fill_panel(p2, column = 2, row = 1) %<>%
fill_panel(p3, column = 3, row = 1) %<>%
fill_panel(p4, column = 1, row = 2) %<>%
fill_panel(p5, column = 2, row = 2) %<>%
fill_panel(p6, column = 3, row = 2)
maritalData <-  read.csv("C:\\Users\\rober\\OneDrive\\Desktop\\FALL22\\COSC3337\\HomeworkTasks\\Task1\\Marriage_Divorce_DB.csv", header=TRUE, stringsAsFactors=FALSE)
#Create new column "Recommendation" for Decision to Divorce or Marry
Recommendation <- rep(NA, 100)
for(x in 1:100) {
if(maritalData$Divorce.Probability[x] >= 1 & maritalData$Divorce.Probability[x] < 2) {
Recommendation[x] = "Marry"
}
else {
Recommendation[x] = "Divorce"
}
}
maritalData <- cbind(maritalData, Recommendation)
# Subtask 1: Find covariance of the given variables; Age gap, Economic Similarity, Common Interests and Divorce Probability
covData <-  subset(maritalData, select=c("Age.Gap", "Economic.Similarity", "Common.Interests", "Divorce.Probability"))
show(cov(covData))
# Here we are given the covariance matrix of all 4 attributes of the dataset. When the covariance is positive
# that means that the two attributes are directly related to each other meaning when one value goes up, the other value
# will do the same. The opposite is assumed for a negative covariance. Looking at this matrix, we can infer that
# the only variable that are directly related will be (Divorce Probability - Age Gap) and (Common Interests - Economic Stability).
# All other compared variables will not be directly related.
# Subtask 2: Create a scatter plot for the attributes Common Interests and Love. Interpret the scatter plot
scatterData <- subset(maritalData, select=c("Common.Interests", "Love"))
X11()
ggplot(scatterData, aes(x = Common.Interests, y = Love)) +
geom_point()
# This plot Common Interests vs. Love is shown to be very indirectly related. There is no structure to the points being plotted therefore there is no
# relationship between common interest and love between two people
# Subtask 3: Create histograms for Divorce, Desire to Marry, and Common Interests attributes for both the Marry and the Divorce recommendations
subMarry <- which(maritalData$Recommendation == "Marry")
subDivorce <- which(maritalData$Recommendation == "Divorce")
p1 <- ggplot(maritalData[subMarry,], aes(x=Divorce.Probability)) + geom_histogram(bins=15, fill="red", col=I("yellow")) + xlab("Divorce Probability") + ylab("Frequency")
p2 <- ggplot(maritalData[subMarry,], aes(x=Desire.to.Marry)) + geom_histogram(bins=15, fill="blue", col=I("red")) + xlab("Desire To Marry") + ylab("Frequency")
p3 <- ggplot(maritalData[subMarry,], aes(x=Common.Interests)) + geom_histogram(bins=15, fill="green", col=I("red")) + xlab("Common Interests") + ylab("Frequency")
p4 <- ggplot(maritalData[subDivorce,], aes(x=Divorce.Probability)) + geom_histogram(bins=15, fill="red", col=I("yellow")) + xlab("Divorce Probability") + ylab("Frequency")
p5 <- ggplot(maritalData[subDivorce,], aes(x=Desire.to.Marry)) + geom_histogram(bins=15, fill="blue", col=I("red")) + xlab("Desire To Marry") + ylab("Frequency")
p6 <- ggplot(maritalData[subDivorce,], aes(x=Common.Interests)) + geom_histogram(bins=15, fill="green", col=I("red")) + xlab("Common Interests") + ylab("Frequency")
X11()
figure <- multi_panel_figure(columns = 3, rows = 2, panel_label_type = "none")
figure %<>%
fill_panel(p1, column = 1, row = 1) %<>%
fill_panel(p2, column = 2, row = 1) %<>%
fill_panel(p3, column = 3, row = 1) %<>%
fill_panel(p4, column = 1, row = 2) %<>%
fill_panel(p5, column = 2, row = 2) %<>%
fill_panel(p6, column = 3, row = 2)
figure
# Subtask 4
X11()
b1 <- ggplot(maritalData, aes(x=Recommendation, y=Self.Confidence, fill=Recommendation)) + geom_boxplot() + xlab("Recommendation") + ylab("Self Confidence")
b2 <- ggplot(maritalData, aes(x=factor(0), y=Self.Confidence)) + geom_boxplot(fill="yellow") + theme(legend.position="none") + xlab("Marry & Divorce") + ylab("Self Confidence")
figure <- multi_panel_figure(columns=5, rows=1, panel_label_type = "none")
figure %<>%
fill_panel(b1, column = 1:3, row = 1) %<>%
fill_panel(b2, column = 4:5, row = 1)
figure
# subtask 5
X11()
ggplot(maritalData, aes(Economic.Similarity, Common.Interests, color=Recommendation)) + geom_point() + labs(x="Economic Similarity", y="Common Interests")
X11()
ggplot(maritalData, aes(Common.Interests, Loyalty, color=Recommendation)) + geom_point() + labs(x="Common Interests", y="Loyalty")
X11()
ggplot(maritalData, aes(Loyalty, Economic.Similarity, color=Recommendation)) + geom_point() + labs(x="Loyalty", y="Economic Similarity")
# subtask 6
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation)) + geom_density(size=1.5)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation)) + geom_density(size=1.5)  + xlab("Social Gap")
# subtask 7
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation)) + geom_density(size=1.5)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation)) + geom_density(size=1.5)  + xlab("Social Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap)) + geom_density(size=1.5, alpha=.5)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Social.Gap)) + geom_density(size=1.5, alpha=.5)  + xlab("Social Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap), fill=Recommendation) + geom_density(size=1.5)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap), color=Recommendation) + geom_density(size=1.5)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, fill=Recommendation) + geom_density(size=1.5)  + xlab("Age Gap")
X11()
X11()
ggplot(maritalData, aes(x=Age.Gap, fill=Recommendation)) + geom_density(size=1.5)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, fill=Recommendation, alpha=.5)) + geom_density(size=1.5)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, fill=Recommendation, alpha=.5)) + geom_density()  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, fill=Recommendation, alpha=.5)) + geom_density()  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density()  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density()  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density(size=1)  + xlab("Social Gap")
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density(size=.8)  + xlab("Social Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density(size=.8)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density(size=.8)  + xlab("Social Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density(.7)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density(size=.7)  + xlab("Age Gap")
X11()
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density(size=.7)  + xlab("Social Gap")
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density(size=.7)  + xlab("Age Gap") + guides(alpha=FALSE)
X11()
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation, fill=Recommendation, alpha=.5)) + geom_density(size=.7)  + xlab("Social Gap") + guides(alpha=FALSE)
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation, fill=Recommendation, alpha=.4)) + geom_density(size=.7)  + xlab("Age Gap") + guides(alpha=FALSE)
X11()
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation, fill=Recommendation, alpha=.4)) + geom_density(size=.7)  + xlab("Social Gap") + guides(alpha=FALSE)
X11()
ggplot(maritalData, aes(x=Age.Gap, color=Recommendation, fill=Recommendation, alpha=.4)) + geom_density(size=.7)  + xlab("Age Gap") + guides(alpha="none")
X11()
ggplot(maritalData, aes(x=Social.Gap, color=Recommendation, fill=Recommendation, alpha=.4)) + geom_density(size=.7)  + xlab("Social Gap") + guides(alpha="none")
